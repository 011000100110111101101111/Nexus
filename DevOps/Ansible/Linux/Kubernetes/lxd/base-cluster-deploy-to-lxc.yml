- hosts: all
  become: yes
  vars:
    # Must container master in the name
    control_plane: "kmaster"
    # Worker names, kworker-1 , kworker-2, kworker-3, ... kworker-{{ number_of_workers }}
    worker_prefix: "kworker"
    number_of_workers: 3
  tasks:
    - name: Create /etc/modules-load.d/k8s.conf for all worker nodes
      copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf

    - name: Load the modules
      shell:
        cmd: sudo modprobe overlay && sudo modprobe br_netfilter

    - name: Configure kernel parameters for all nodes
      copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf

    - name: Apply the changes
      shell:
        cmd: sudo sysctl --system

    - name: Create LXD container controller
      shell: |
        lxc launch ubuntu:22.04 {{ control_plane }} -c security.privileged=true -c security.nesting=true -c linux.kernel_modules=ip_tables,ip6_tables,netlink_diag,nf_nat,overlay
        lxc file push /boot/config-5.15.0-94-generic  {{ control_plane }}/boot/

    - name: Create LXD container workers
      shell: |
        lxc launch ubuntu:22.04 {{ item }} -c security.privileged=true -c security.nesting=true -c linux.kernel_modules=ip_tables,ip6_tables,netlink_diag,nf_nat,overlay
        lxc file push /boot/config-5.15.0-94-generic  {{ item }}/boot/
      loop: "{{ range(1, number_of_workers|int + 1) | map('string') | map('regex_replace', '^', worker_prefix) | map('join', '') | list }}"

    - name: Restart control plane to apply changes
      shell: |
        lxc exec {{ control_plane }} -- /bin/bash -c 'cat <<EOL | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOL'
        lxc exec {{ control_plane }} -- /bin/bash -c 'cat <<EOL | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOL'
        lxc exec {{ control_plane }} -- /bin/bash -c 'sudo sysctl --system'
        lxc restart {{ control_plane }}

    - name: Restart workers to apply changes
      shell: |
        lxc exec {{ item }} -- /bin/bash -c 'cat <<EOL | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOL'
        lxc exec {{ item }} -- /bin/bash -c 'cat <<EOL | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOL'
        lxc restart {{ item }}
      loop: "{{ range(1, number_of_workers|int + 1) | map('string') | map('regex_replace', '^', worker_prefix) | map('join', '') | list }}"

    - name: Restart to apply changes
      shell: |
        lxc exec {{ control_plane }} -- sudo apt-get update
        lxc exec {{ control_plane }} -- sudo install -m 0755 -d /etc/apt/keyrings
        lxc exec {{ control_plane }} -- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg
        lxc exec {{ control_plane }} -- sudo chmod a+r /etc/apt/keyrings/docker.gpg
        lxc exec {{ control_plane }} -- echo "deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        lxc exec {{ control_plane }} -- sudo apt-get update
        lxc exec {{ control_plane }} -- sudo apt update && sudo apt install -y containerd.io
        lxc exec {{ control_plane }} -- containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
        lxc exec {{ control_plane }} -- sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
        lxc exec {{ control_plane }} -- sudo systemctl restart containerd && sudo systemctl enable containerd
        lxc exec {{ control_plane }} -- sudo apt update && sudo apt install -y apt-transport-https ca-certificates curl gpg
        lxc exec {{ control_plane }} -- curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        lxc exec {{ control_plane }} -- echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        lxc exec {{ control_plane }} -- sudo apt update && sudo apt install -y kubelet kubeadm kubectl && sudo apt-mark hold kubelet kubeadm kubectl
